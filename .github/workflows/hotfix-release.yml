name: Hotfix Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version to fix"
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci
      - run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci
      - run: npm test

  hotfix:
    name: Build & Release Fix
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      REGISTRY: cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup env
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "FIX=${{ github.run_number }}" >> $GITHUB_ENV

      - run: git checkout releases/$VERSION

      - name: Docker build & tag
        run: |
          docker build -t $REGISTRY:${VERSION}_fix${FIX} .
          docker tag $REGISTRY:${VERSION}_fix${FIX} $REGISTRY:${VERSION}_latest

      - name: Docker login & push
        run: |
          echo "${{ secrets.YC_CR_PASSWORD }}" | docker login -u oauth --password-stdin cr.yandex
          docker push $REGISTRY:${VERSION}_fix${FIX}
          docker push $REGISTRY:${VERSION}_latest

      - name: Git tag push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${VERSION}_fix${FIX}
          git push origin v${VERSION}_fix${FIX}

      - name: Get commits since last tag
        id: commits
        run: |
          LATEST_TAG=$(git tag --list "v${VERSION}*" | sort -V | tail -n 1)
          COMMITS=$(git log --pretty=format:"* %h %s (%an)" $LATEST_TAG..HEAD)
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on GitHub Issue
        run: |
          gh issue comment $(gh issue list --search "Release v$VERSION" --json number --jq '.[0].number') \
            --body "ðŸ›  **Fix** \`v${VERSION}_fix${FIX}\` released\n\
            - ðŸ•’ Date: $(date -u)\n\
            - ðŸ‘¤ Author: @${{ github.actor }}\n\
            - ðŸ“¦ Docker: \`$REGISTRY:${VERSION}_fix${FIX}\`\n\n\
            ### Commits:\n${{ steps.commits.outputs.COMMITS }}"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
